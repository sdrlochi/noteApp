{"ast":null,"code":"import { legacy_createStore as createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\nimport { noteCreateReducer, noteListReducer } from \"./reducers/notesReducers\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteList: noteListReducer,\n  //3. create reducer (createNote)\n  noteCreate: noteCreateReducer\n});\nconst userInfoFromStrage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStrage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["legacy_createStore","createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","noteCreateReducer","noteListReducer","reducer","userLogin","userRegister","noteList","noteCreate","userInfoFromStrage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"sources":["/home/sdrlochi/Desktop/notezipper/frontend/src/store.js"],"sourcesContent":["import {\n  legacy_createStore as createStore,\n  combineReducers,\n  applyMiddleware,\n} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\nimport { noteCreateReducer, noteListReducer } from \"./reducers/notesReducers\";\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteList: noteListReducer,\n  //3. create reducer (createNote)\n  noteCreate: noteCreateReducer,\n});\n\nconst userInfoFromStrage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStrage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"AAAA,SACEA,kBAAkB,IAAIC,WADxB,EAEEC,eAFF,EAGEC,eAHF,QAIO,OAJP;AAKA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,yBAAtD;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,0BAAnD;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;EAC9BS,SAAS,EAAEL,gBADmB;EAE9BM,YAAY,EAAEL,mBAFgB;EAG9BM,QAAQ,EAAEJ,eAHoB;EAI9B;EACAK,UAAU,EAAEN;AALkB,CAAD,CAA/B;AAQA,MAAMO,kBAAkB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACvBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADuB,GAEvB,IAFJ;AAIA,MAAMG,YAAY,GAAG;EACnBT,SAAS,EAAE;IAAEU,QAAQ,EAAEN;EAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAClB,KAAD,CAAnB;AAEA,MAAMmB,KAAK,GAAGtB,WAAW,CACvBS,OADuB,EAEvBU,YAFuB,EAGvBf,mBAAmB,CAACF,eAAe,CAAC,GAAGmB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}